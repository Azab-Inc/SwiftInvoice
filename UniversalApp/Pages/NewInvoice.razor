@page "/newinvoice"
@using UniversalApp.Models;
@using UniversalApp.Services;
@using UniversalApp.Shared.Components;
@using Microsoft.AspNetCore.Components.Forms


<h1 class="page-heading">New Invoice</h1>

<form class="new-invoice mx-auto my-3 flex md:flex-wrap md:flex-row flex-col gap-3">
    <div class="md:w-2/5">
        <label>
            <span>Invoice num:</span>
            <input @bind="newInvoice.InvoiceNum" name="invoice-num" type="text" />
        </label>
        <label>
            <span>Client name:</span>
            <input @bind="newInvoice.ClientName" name="client-name" type="text" />
        </label>
        <label>
            <span>Job name:</span>
            <input @bind="newInvoice.JobName" name="job-name" type="text" />
        </label>
        <hr />
        <!-- ... (previous code) ... -->
        <label>
            <span>START date:</span>
            <InputDate @bind-Value="newInvoice.StartDate" format="dd/MM/yyyy" />
        </label>
        <label>
            <span>END date:</span>
            <InputDate @bind-Value="newInvoice.EndDate" format="dd/MM/yyyy" />
        </label>
        <label>
            <span>PAYMENT date:</span>
            <InputDate @bind-Value="newInvoice.PaymentDate" format="dd/MM/yyyy" />
        </label>
        <label>
            <span>CREATED date:</span>
            <InputDate @bind-Value="newInvoice.CreatedDate" format="dd/MM/yyyy" />
        </label>
    </div>
    <div class="md:w-2/5">
        <label class="flex flex-col">
            <span>Job Description: </span>
            <textarea @bind="newInvoice.JobDescription" name="job-description" rows="10" cols="25"></textarea>
        </label>
    </div>
    <hr />
    <div>
        <!-- Items section -->
        @foreach (var item in invoiceItems)
        {
            <div class="w-full flex flex-col p-3 border-pri border-2 rounded-md mt-3 mx-auto">
                <div class="w-full flex md:flex-row flex-col gap-3">
                    <div class="flex flex-col w-1/5">
                        <span>Item name:</span>
                        <input class="border-2 border-pri rounded-sm p-3" @bind="item.Name" type="text" />
                    </div>
                    <div class="flex flex-col w-3/5">
                        <span>Description: </span>
                        <textarea class="border-2 border-pri rounded-sm p-3" @bind="item.Description" rows="2" cols="10"></textarea>
                    </div>
                    <div class="flex flex-col w-1/5">
                        <span>Price: </span>
                        <input class="border-2 border-pri rounded-sm p-3" @bind="item.Price" type="number" />
                    </div>
                </div>
                <div class="mt-3">
                    <button class="btn btn-danger" @onclick:preventDefault="true" @onclick="(() => RemoveItem(item))">Remove item</button>
                </div>
            </div>
        }

        <div class="mt-3">
            <button class="btn btn-sec" @onclick:preventDefault="true" @onclick="AddItem">Add item</button>
        </div>
    </div>
</form>

@if (!createdInvoice)
{
    <button class="btn-suc text-xl px-4 py-2" @onclick="SaveInvoice">Create Invoice</button>
}

<a href="/showall"><button class="btn-warn mt-3">Back</button></a>

@if (createdInvoice)
{
    <div class="mt-3">
        <ToasterComponent Message="Invoice created!" Type="success" Redirect="true" Location="invoices" Url="showall" />
    </div>
}


@code {
    private InvoiceService invoiceService = new InvoiceService();
    private Invoice newInvoice = new Invoice();
    private List<Item> invoiceItems = new List<Item>();

    private UserService userService = new UserService();
    private User currentUser = new User();
    private bool createdInvoice = false;

    protected override void OnInitialized()
    {
        currentUser = userService.dbLoadUser();
        newInvoice.UserId = currentUser.UserId;
        newInvoice.StartDate = DateTime.Now;
        newInvoice.EndDate = DateTime.Now;
        newInvoice.PaymentDate = DateTime.Now;
        newInvoice.CreatedDate = DateTime.Now;
    }

    private void AddItem()
    {
        invoiceItems.Add(new Item());
    }

    private void RemoveItem(Item item)
    {
        invoiceItems.Remove(item);
    }

    private void SaveInvoice()
    {
        newInvoice.UserId = currentUser.UserId;
        invoiceService.dbCreateInvoice(newInvoice, invoiceItems);
        createdInvoice = true;
    }
}
