@page "/editinvoice/{InvoiceId:int}"
@using UniversalApp.Models;
@using UniversalApp.Services;
@using UniversalApp.Shared.Components;
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager


<h1 class="page-heading">Edit Invoice</h1>

@if (invoice != null)
{
    <form class="edit-invoice mx-auto my-3 flex md:flex-wrap md:flex-row flex-col gap-3">
        <div class="md:w-2/5">
            <label>
                <span>Invoice num:</span>
                <input @bind="invoice.InvoiceNum" name="invoice-num" type="text" />
            </label>
            <label>
                <span>Client name:</span>
                <input @bind="invoice.ClientName" name="client-name" type="text" />
            </label>
            <label>
                <span>Job name:</span>
                <input @bind="invoice.JobName" name="job-name" type="text" />
            </label>
            <hr />
            <label>
                <span>START date:</span>
                <InputDate @bind-Value="invoice.StartDate" format="dd/MM/yyyy" />
            </label>
            <label>
                <span>END date:</span>
                <InputDate @bind-Value="invoice.EndDate" format="dd/MM/yyyy" />
            </label>
            <label>
                <span>PAYMENT date:</span>
                <InputDate @bind-Value="invoice.PaymentDate" format="dd/MM/yyyy" />
            </label>
            <label>
                <span>CREATED date:</span>
                <InputDate @bind-Value="invoice.CreatedDate" format="dd/MM/yyyy" />
            </label>
        </div>
        <div class="md:w-2/5">
            <label class="flex flex-col">
                <span>Job Description: </span>
                <textarea @bind="invoice.JobDescription" name="job-description" rows="10" cols="25"></textarea>
            </label>
        </div>
        <hr />
        <div>
            <!-- Display Invoice Items for Editing -->
            @foreach (var item in invoiceItems)
            {
                <div class="w-full flex flex-col p-3 border-pri border-2 rounded-md mt-3 mx-auto">
                    <div class="w-full flex md:flex-row flex-col gap-3">
                        <div class="flex flex-col w-1/5">
                            <span>Item name:</span>
                            <input class="border-2 border-pri rounded-sm p-3" @bind="item.Name" type="text" />
                        </div>
                        <div class="flex flex-col w-3/5">
                            <span>Description: </span>
                            <textarea class="border-2 border-pri rounded-sm p-3" @bind="item.Description" rows="2" cols="10"></textarea>
                        </div>
                        <div class="flex flex-col w-1/5">
                            <span>Price: </span>
                            <input class="border-2 border-pri rounded-sm p-3" @bind="item.Price" type="number" />
                        </div>
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-danger" @onclick:preventDefault="true" @onclick="(() => RemoveItem(item))">Remove item</button>
                    </div>
                </div>
            }

            <div class="mt-3">
                <button class="btn btn-sec" @onclick:preventDefault="true" @onclick="AddItem">Add item</button>
            </div>


            @if (savedChanges)
            {
                NavigationManager.NavigateTo("showall");
            }

            @if (deleteInvoice)
            {
                <ToasterComponent Message="Are you sure you want to delete this invoice?" Type="danger" Redirect="false" Location="" Url="" />
                <button @onclick:preventDefault="true" @onclick="ConfirmDeleteInvoice" class="btn btn-danger mt-3">Confirm delete</button>
            }

            @if (confirmSave)
            {
                <ToasterComponent Message="Are you sure you want to edit this invoice?" Type="warn" Redirect="false" Location="" Url="" />
                <button @onclick:preventDefault="true" @onclick="ConfirmSaveChanges" class="btn btn-warn mt-3">Confirm save</button>
            }

            @if (!savedChanges && !confirmSave && !deleteInvoice)
            {
                <div class="flex flex-row mt-3 gap-3">
                    <button @onclick:preventDefault="true" @onclick="StartSaveChangesConfirmation" class="btn btn-warn">Save changes</button>
                    <button @onclick:preventDefault="true" @onclick="StartDeleteInvoiceConfirmation" class="btn btn-danger">Delete invoice</button>
                </div>
            }


        </div>
    </form>
}
else
{
    <p>Loading invoice...</p>
}

@code {
    [Parameter] public int InvoiceId { get; set; }

    private InvoiceService invoiceService = new InvoiceService();
    private Invoice invoice = new Invoice();
    private List<Item> invoiceItems = new List<Item>();

    private bool savedChanges = false;
    private bool deleteInvoice = false;
    private bool confirmSave = false;

    protected override async Task OnInitializedAsync()
    {
        int invoiceId = InvoiceId;

        // Load Invoice
        invoice = invoiceService.dbGetInvoice(invoiceId);

        if (invoice != null)
        {
            // Load Invoice Items
            invoiceItems = invoiceService.dbGetItems(invoiceId);
        }
    }

    private void AddItem()
    {
        invoiceItems.Add(new Item());
    }

    private void RemoveItem(Item item)
    {
        invoiceItems.Remove(item);
    }

    public void StartDeleteInvoiceConfirmation()
    {
        deleteInvoice = true;
        confirmSave = false;
    }

    public void StartSaveChangesConfirmation()
    {
        confirmSave = true;
        deleteInvoice = false;
    }

    public void ConfirmDeleteInvoice()
    {
        invoiceService.dbDeleteInvoice(invoice.InvoiceId);
        NavigationManager.NavigateTo("showall");
    }

    public void ConfirmSaveChanges()
    {
        invoiceService.dbEditInvoice(invoice, invoiceItems);
        savedChanges = true;
        confirmSave = false;
    }
}
